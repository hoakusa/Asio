@model Asio.Models.Enrollment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enrollment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @if (TempData["Success"] != null)
        {
            <div class="text-success">
                <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Student.User.UserName, "Student", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="control-label col-md-10" style="text-align:left;">
                @Model.Student.User.FullName
                @Html.HiddenFor(model => model.StudentId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="control-label col-md-10" style="text-align:left;">
                @Model.Course.Name
                @Html.HiddenFor(model => model.CourseId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPassed,"Passed", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPassed)
                    @Html.ValidationMessageFor(model => model.IsPassed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
